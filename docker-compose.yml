version: '2'
services:
    frontend:
        build:
            context: ./frontend
        image: frontend
        restart: always
        ports:
            - 80
        cgroup_parent: main
        environment:
            - SERVICE_80_NAME=frontend
        depends_on:
            - registrator
    users:
        build:
            context: ./users
        image: users
        restart: always
        ports:
            - 80 
        cgroup_parent: main
        environment:
            - SERVICE_80_NAME=users
        depends_on:
            - registrator
    consul:
        image: gliderlabs/consul-server:latest
        container_name: consul
        hostname: 127.0.0.1
        restart: always
        ports:
            - 8300:8300
            - 8400:8400
            - 8500:8500
            - 8600:53/udp
        command: -advertise 127.0.0.1 -data-dir /tmp/consul -bootstrap -client 0.0.0.0
    registrator:
        image: gliderlabs/registrator:latest
        container_name: registrator
        hostname: 127.0.0.1
        network_mode: host
        restart: always
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock
        command: -ip 127.0.0.1 consul://127.0.0.1:8500
    consul-template:
        image: consul-template
        container_name: consul-template
        build:
            context: ./consul-template
        network_mode: host
        restart: always
        volumes_from:
            - openresty
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        command: -consul=127.0.0.1:8500 -wait=5s -template="/etc/ctmpl/nginx.ctmpl:/usr/local/openresty/nginx/conf/nginx.conf:docker kill -s HUP openresty"
    openresty:
        image: openresty
        container_name: openresty
        build:
            context: ./openresty
        restart: always
        network_mode: host
        volumes:
            - /usr/local/openresty/nginx/conf
        ports:
            - 8585:8585
        depends_on:
            - users
            - frontend